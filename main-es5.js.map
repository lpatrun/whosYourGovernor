{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/shared/alphabetical-order.pipe.ts","webpack:///src/app/shared/capitalise.pipe.ts","webpack:///src/app/shared/data.service.ts","webpack:///src/app/shared/no-data.pipe.ts","webpack:///src/app/shared/pretty-num.pipe.ts","webpack:///src/app/trazilica/trazilica.component.ts","webpack:///src/app/trazilica/trazilica.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dataService","translate","title","addLangs","setDefaultLang","localStorage","getItem","storedLang","toChangeLang","use","setItem","toFetchCounties","toFetchTowns","toFetchComunities","selectedLanguage","subscribe","language","selector","templateUrl","styleUrls","AppModule","loader","provide","useFactory","HttpLoaderFactory","deps","declarations","providers","bootstrap","http","HeaderComponent","useLang","AlphabeticalOrderPipe","value","sort","a","b","name","localeCompare","CapitalisePipe","toLowerCase","replace","split","i","length","charAt","toUpperCase","slice","join","DataService","countiesSub","townComSub","townGovernor","countyGowernor","get","fetchedPosts","next","counties","towns","communities","entityType","ID","data","NoDataPipe","PrettyNumPipe","TrazilicaComponent","townMainContainer","town","validCounty","validTown","townsComunities","countyGuverner","countyGovernor","governor","searchForm","valueChanges","getZupanija","getOpcina","zupanija","undefined","countyExists","filter","item","countyName","findCounty","patchValue","countyAutoSelect","find","opcina","opcinaObjekt","opcinaExists","filteredCounties","pipe","_countyFilter","toString","filteredTown","_townComunityFilter","filterValue","indexOf","county","zupanijaId","element","toGetCountyGovernor","entityToDisplay","gradID","toGetTownGovernor","setValue","onSubmit","townComunityAutoSelect","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './shared/data.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'governor';\n\n  constructor(private dataService: DataService,\n      private translate: TranslateService\n    ) { \n      translate.addLangs(['hr', 'en']);\n      translate.setDefaultLang('hr');\n    }\n\n  ngOnInit() {\n    if(localStorage.getItem('language')){\n      let storedLang = localStorage.getItem('language');\n      this.dataService.toChangeLang(storedLang);\n      this.translate.use(storedLang);\n    } else {\n      localStorage.setItem('language', 'hr');\n      this.dataService.toChangeLang('hr');\n    }\n    this.dataService.toFetchCounties();\n    this.dataService.toFetchTowns();\n    this.dataService.toFetchComunities();\n    this.dataService.selectedLanguage.subscribe( (language: string) => {\n      this.translate.use(language);\n    })\n  }\n}\n","<div class=\"container\">\r\n  <app-header></app-header>\r\n  <app-trazilica></app-trazilica>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DataService } from './shared/data.service';\nimport { TrazilicaComponent } from './trazilica/trazilica.component';\nimport { PrettyNumPipe } from './shared/pretty-num.pipe';\nimport { CapitalisePipe } from './shared/capitalise.pipe';\nimport { AlphabeticalOrderPipe } from './shared/alphabetical-order.pipe';\nimport { HeaderComponent } from './header/header.component';\n\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { NoDataPipe } from './shared/no-data.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TrazilicaComponent,\n    PrettyNumPipe,\n    CapitalisePipe,\n    AlphabeticalOrderPipe,\n    HeaderComponent,\n    NoDataPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NoopAnimationsModule,\n    MatAutocompleteModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  selectedLanguage = 'hr';\n\n  useLang(language) {\n    this.dataService.toChangeLang(language);\n    localStorage.setItem('language', language);\n    this.selectedLanguage = language;\n  }\n\n  ngOnInit() {\n    if(localStorage.getItem('language')){\n      this.selectedLanguage = localStorage.getItem('language');\n    }\n  }\n\n}\n","<div class=\"container__menu\">\n  <img src=\"../assets/osijek.png\" alt=\"Osijek\">\n  <div class=\"container__menu__langs\">\n    <span [ngClass]=\"{'active-lang': selectedLanguage ==='hr'}\" (click)=\"useLang('hr')\">HR</span>\n    <span [ngClass]=\"{'active-lang': selectedLanguage ==='en'}\" (click)=\"useLang('en')\">EN</span>\n  </div>\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"alphabeticalOrder\"\n})\nexport class AlphabeticalOrderPipe implements PipeTransform {\n  transform(value: any): any {\n    if (value != null) {\n      return value.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    } else {\n      return;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalise'\n})\nexport class CapitalisePipe implements PipeTransform {\n  transform(value: any): any {\n    value = value.toLowerCase().replace(/([-/])/g, \" \").split(\" \");\n    for (let i = 0; i < value.length; i++) {\n      value[i] = value[i].charAt(0).toUpperCase() + value[i].slice(1)\n    }\n    return value.join(\" \");\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { OnInit, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { County } from './county.model';\r\nimport { Town } from './town.model';\r\nimport { TownGovernor } from './town-governor.model';\r\nimport { CountyGovernor } from './county-governor.model';\r\n\r\nexport class DataService implements OnInit {\r\n  countiesSub = new Subject<County[]>();\r\n  townComSub = new Subject<Town[]>();\r\n\r\n  townGovernor = new Subject<TownGovernor>();\r\n  countyGowernor = new Subject<CountyGovernor>();\r\n\r\n  selectedLanguage = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toFetchCounties() {\r\n    this.http.get<{ [counties: string]: County[] }>(\r\n      'https://tehcon.com.hr/api/CroatiaTownAPI/list.php?v=1&entityType=1'\r\n    ).subscribe(\r\n      fetchedPosts => {\r\n        this.countiesSub.next(fetchedPosts.counties);\r\n      }\r\n    );\r\n  }\r\n\r\n  toFetchTowns() {\r\n    this.http.get<{ [towns: string]: Town[] }>(\r\n      'https://tehcon.com.hr/api/CroatiaTownAPI/list.php?v=1&entityType=2'\r\n    ).subscribe(\r\n      fetchedPosts => {\r\n        this.townComSub.next(fetchedPosts.towns);\r\n      }\r\n    );\r\n  }\r\n\r\n  toFetchComunities() {\r\n    this.http.get<{ [communities: string]: Town[] }>(\r\n      'https://tehcon.com.hr/api/CroatiaTownAPI/list.php?v=1&entityType=3'\r\n    ).subscribe(\r\n      fetchedPosts => {\r\n        this.townComSub.next(fetchedPosts.communities);\r\n      }\r\n    );\r\n  }\r\n\r\n  toGetTownGovernor(entityType: number, ID: number) {\r\n    this.http.get<TownGovernor>(\r\n      'https://tehcon.com.hr/api/CroatiaTownAPI/details.php?v=1&entityType=' + entityType + '&ID=' + ID\r\n    ).subscribe(\r\n      data => this.townGovernor.next(data)\r\n    );\r\n  }\r\n\r\n  toGetCountyGovernor(entityType: number, ID: number) {\r\n    this.http.get<CountyGovernor>(\r\n      'https://tehcon.com.hr/api/CroatiaTownAPI/details.php?v=1&entityType=' + entityType + '&ID=' + ID\r\n    ).subscribe(\r\n      data => this.countyGowernor.next(data)\r\n    );\r\n  }\r\n\r\n  toChangeLang(language: string) {\r\n    this.selectedLanguage.next(language);\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noData'\n})\nexport class NoDataPipe implements PipeTransform {\n\n  transform(value: any): any {\n    if (value === 0 || value === \"\") {\n      return ('-');\n    }\n    else return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'prettyNum'\n})\nexport class PrettyNumPipe implements PipeTransform {\n\n  transform(value: any): any {\n    return value.replace(/([-/])/g, \" \");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { County } from '../shared/county.model';\nimport { Town } from '../shared/town.model';\nimport { DataService } from '../shared/data.service';\nimport { TownGovernor } from '../shared/town-governor.model';\nimport { CountyGovernor } from '../shared/county-governor.model';\n\n\n@Component({\n  selector: 'app-trazilica',\n  templateUrl: './trazilica.component.html',\n  styleUrls: ['./trazilica.component.scss']\n})\nexport class TrazilicaComponent implements OnInit {\n  searchForm: FormGroup;\n\n  counties: County[] = [];\n  filteredCounties: Observable<County[]>;\n  townMainContainer: Town[] = [];\n  town: Town[] = [];\n  filteredTown: Observable<Town[]>;\n\n  countyGovernor: CountyGovernor;\n  townGovernor: TownGovernor;\n  entityToDisplay: string;\n\n  validCounty: boolean = false;\n  validTown: boolean = false;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.countiesSub.subscribe(\n      (counties: County[]) => this.counties = counties);\n\n    this.dataService.townComSub.subscribe(\n      (townsComunities: Town[]) => {\n      this.town = [...this.town, ...townsComunities];\n      this.townMainContainer = [...this.town];\n    });\n    \n    this.dataService.countyGowernor.subscribe(\n      (countyGuverner: CountyGovernor) => this.countyGovernor = countyGuverner );\n    \n    this.dataService.townGovernor.subscribe(\n      (governor: TownGovernor) => this.townGovernor = governor );\n\n    this.searchForm = new FormGroup({\n      'county': new FormControl(),\n      'town': new FormControl(),\n    });\n\n    this.searchForm.get('county').valueChanges.subscribe(\n      value => this.getZupanija(value)\n    )\n\n    this.searchForm.get('town').valueChanges.subscribe(\n      value => this.getOpcina(value)\n    )    \n  }\n\n  getZupanija(zupanija: string): void {\n    if (zupanija == \"\" || zupanija == undefined || zupanija == null) {\n      this.town = this.townMainContainer;\n    } else if (this.countyExists(zupanija)) {\n      this.validCounty = true;\n      this.town = this.townMainContainer.filter(\n        item => item.countyName === zupanija\n      );\n    } else {\n      this.validCounty = false;\n    }\n    if (this.searchForm.value.town !== null && this.searchForm.value.town !== undefined) {\n      if (this.findCounty(this.searchForm.value.town) != zupanija) {\n        this.searchForm.patchValue({'town': \"\"});\n        this.countyAutoSelect();\n      }\n    }\n  }\n\n  //jel pojam upisan u prvu kucicu valjan\n  countyExists(zupanija: string): boolean {\n    return this.counties.find(item => item.name === zupanija) ? true : false;\n  }\n\n  findCounty(opcina: string): string {\n    if (opcina) {\n      let opcinaObjekt = this.townMainContainer.find(\n        item => item.name === opcina\n      );\n      return opcinaObjekt.countyName;\n    } else {\n      return;\n    }\n  }\n\n  getOpcina(opcina: string): void {\n    if (this.opcinaExists(opcina)) {\n      this.validTown = true;\n      const zupanija = this.townMainContainer.find(\n        item => item.name === opcina\n      );\n      this.searchForm.patchValue({'county': zupanija.countyName});\n    } else {\n      this.validTown = false;\n    }\n  }\n\n  //valjanost unosa u drugu kucicu\n  opcinaExists(opcina: string): boolean {\n    return this.townMainContainer.find(item => item.name === opcina) ? true : false;\n  }\n\n  countyAutoSelect(): void {\n    this.filteredCounties = this.searchForm.get('county').valueChanges.pipe(\n      startWith(\"\"),\n      map(value => this._countyFilter(value.toString()))\n    );\n  }\n\n  townComunityAutoSelect(): void {\n    this.filteredTown = this.searchForm.get('town').valueChanges.pipe(\n      startWith(\"\"),\n      map(value => this._townComunityFilter(value.toString()))\n    );\n  }\n\n  private _countyFilter(value: string): County[] {\n    const filterValue = value.toLowerCase();\n    return this.counties.filter(\n      item => item.name.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  private _townComunityFilter(value: string): Town[] {\n    const filterValue = value.toLowerCase();\n    return this.town.filter(\n      item => item.name.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  onSubmit(): void {\n    this.townGovernor = null;\n    this.countyGovernor = null;\n\n    if (this.searchForm.value.county !== null && this.searchForm.value.town === null || this.searchForm.value.town === \"\") {\n      let zupanijaId = this.counties.find(element => element.name === this.searchForm.value.county);\n      this.dataService.toGetCountyGovernor(zupanijaId.entityType, zupanijaId.ID);\n      this.entityToDisplay = zupanijaId.name;\n    }\n    //ako je odabran grad (i zupanija (zupanija se sama doda))\n    else if (this.searchForm.value.town !== null && this.searchForm.value.county !== null) {\n      let gradID = this.town.find(element => element.name === this.searchForm.value.town);\n      this.dataService.toGetTownGovernor(gradID.entityType, gradID.ID);\n      this.entityToDisplay = gradID.name;\n    }\n\n    this.searchForm.setValue({\n      'county': \"\",\n      'town': \"\"\n    });\n    this.town = this.townMainContainer;\n    this.validCounty = false;\n    this.validTown = false;\n  }\n}\n","<div class=\"content-container\">\n  <div class=\"content-container__purple-bar\"></div>\n\n  <div class=\"content-container__title\">\n    <div class=\"content-container__title--top\">{{ 'appText.question' | translate }}</div>\n    <div class=\"content-container__title--bottom\">{{ 'appText.person' | translate }}</div>\n  </div>\n\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"searchForm\">\n\n    <label for=\"zupanija\" class=\"label-class\">{{ 'appText.county' | translate }}</label>\n    <div class=\"county\">\n      <input type=\"text\" placeholder=\" &#xf041;   {{ 'appText.county' | translate }}\"\n        aria-label=\"Text\" matInput [matAutocomplete]=\"auto\"\n        (focus)=\"countyAutoSelect()\" id=\"zupanija\" formControlName=\"county\">\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)='getZupanija($event.option.value)'>\n        <mat-option *ngFor=\"let zupanija of filteredCounties | async | alphabeticalOrder\" [value]=\"zupanija.name\">\n          {{ zupanija.name }}\n        </mat-option>\n      </mat-autocomplete>\n    </div>\n\n    <label for=\"gradOpcina\" class=\"label-class\">{{ 'appText.town' | translate }}</label>\n    <div class=\"county\"> \n      <div class=\"county__responsive-grid\">\n        <div>\n          <input type=\"text\" placeholder=\" &#xf041;   {{ 'appText.town' | translate }}\"\n            aria-label=\"Text\" matInput [matAutocomplete]=\"auto2\"\n            (focus)=\"townComunityAutoSelect()\" id=\"gradOpcina\" formControlName=\"town\">\n          <mat-autocomplete #auto2=\"matAutocomplete\" (optionSelected)=\"getOpcina($event.option.value)\">\n            <mat-option *ngFor=\"let opcina of filteredTown | async | alphabeticalOrder\" [value]=\"opcina.name\">\n              {{ opcina.name }}\n            </mat-option>\n          </mat-autocomplete>\n        </div>\n        <button class=\"btn-submit\" type=\"submit\"\n          [disabled]=\"!validCounty && !validTown\">{{ 'appText.details' | translate }}</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"result-details__title\">{{ 'appText.detailsFor' | translate }}: {{ entityToDisplay }}</div>\n\n<div class=\"content-container\">\n  <div class=\"result-details\">\n    <div *ngIf=\"townGovernor\" class=\"result-details__grid\">\n      <div><b>{{ 'appText.mayor' | translate }}</b>\n        <p>{{ townGovernor.governor | capitalise}}</p>\n      </div>\n      <div><b>Web</b>\n        <p>{{ townGovernor.web | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.vice' | translate }}</b>\n        <p>{{ townGovernor.viceGovernor | capitalise | noData }}</p>\n      </div>\n      <div><b>Email</b>\n        <p>{{ townGovernor.email | noData  | noData}}</p>\n      </div>\n      <div><b>{{ 'appText.address' | translate }}</b>\n        <p>{{ townGovernor.address | capitalise | noData}}</p>\n      </div>\n      <div><b>{{ 'appText.telephone' | translate }}</b>\n        <p><a [href]=\"'tel:' + townGovernor.phone\">{{ townGovernor.phone | prettyNum  | noData}}</a></p>\n      </div>\n      <div><b>{{ 'appText.zip' | translate }}</b>\n        <p>{{ townGovernor.zipCode | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.fax' | translate }}</b>\n        <p>{{ townGovernor.fax | prettyNum | noData }}</p>\n      </div>\n    </div>\n\n    <div *ngIf=\"countyGovernor\" class=\"result-details__grid\">\n      <div><b>{{ 'appText.governor' | translate }}</b>\n        <p>{{ countyGovernor.governor | capitalise | noData}}</p>\n      </div>\n      <div><b>Web</b>\n        <p>{{ countyGovernor.web | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.vice' | translate }}</b>\n        <p>{{ countyGovernor.viceGovernor | capitalise | noData }}</p>\n      </div>\n      <div><b>Email</b>\n        <p>{{ countyGovernor.email | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.address' | translate }}</b>\n        <p>{{ countyGovernor.address | capitalise | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.telephone' | translate }}</b>\n        <p><a [href]=\"'tel:' + countyGovernor.phone\">{{ countyGovernor.phone | prettyNum | noData }}</a></p>\n      </div>\n      <div><b>{{ 'appText.zip' | translate }}</b>\n        <p>{{ countyGovernor.zipCode | noData }}</p>\n      </div>\n      <div><b>{{ 'appText.fax' | translate }}</b>\n        <p>{{ countyGovernor.fax | prettyNum | noData }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}